<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= title %>
    </title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="css/stylesheet.css">
    <link rel="icon" href="img/ico.png" type="image/png">


</head>

<!-- onload="commentSeriesGrid();" -->

<body>

    <header>
        <h1>Cine Top</h1>
        <% for (let i=0; i < id.length; i++) { %>
            <p>
                <%= id[i].id %>
            </p>
            <% } %>
              
             <!--    <button id="btn" class="btn" onclick="carregaScript('series')" style="color: aliceblue;">series</button> -->
                <script>
                    let scriptAtual = null;

                    function carregaScript(tipo) {
                        // Remove o script anterior
                        if (scriptAtual) {
                            scriptAtual.remove();
                        }

                        // Cria o novo script
                        const novoScript = document.createElement('script');
                        novoScript.src = (tipo === 'filmes') ? 'scripttyy.js' : 'myseries.js';

                        // Define o evento onload para inicializar o script carregado
                        novoScript.src = (tipo === 'filmes')
                            ? 'scripttyy.js?v=' + Date.now()
                            : 'myseries.js?v=' + Date.now();
                        novoScript.onload = () => {
                            if (tipo === 'filmes' && window.FilmesAPI) {
                                FilmesAPI.init(); // Chama a função de inicialização
                            } else if (tipo === 'series' && window.SeriesAPI) {
                                SeriesAPI.init(); // Chama a função de inicialização
                            }
                        };
                       

                        // Adiciona à página
                        document.head.appendChild(novoScript);
                        scriptAtual = novoScript;
                    }
                </script>

    </header>

    <div class="search-container">
        <input type="text" id="searchInput" placeholder="Pesquisar filmes...">
        <div class="search-loading"></div>
    </div>

    <div id="searchResultsContainer" style="display: none;">
        <h2 class="text-center my-4">Resultados da Pesquisa</h2>
        <div class="movie-grid" id="searchResultsGrid"></div>
    </div>
    <!-- <div class="movie-grid" id="seriesGrid"></div> -->

    <div class="movie-grid" id="movieGrid"></div>

    <div id="movieModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <div id="modalContent"></div>
        </div>
    </div>

    <!-- Adicione o loader antes do fechamento do body -->
    <div class="loader">
        <div class="spinner"></div>
    </div>
    <div><br></div><div><br></div><div><br></div><div><br></div>
    <footer class="footer" style="display: none;">
        <div><br></div>
        <p>Get in touch: <a href="mailto:xyzsqur2@proton.me">xyzsqur2@proton.me</a></p>
        <div><br></div>

    </footer>
    <button id="backToTopBtn" title="Voltar ao Topo">⬆</button>
    <script>
        let originalSeriesGridHTML;
        let originalMovieGridHTML;
        function deleteScriptTag(src) {
            const scriptTag = document.querySelector(`script[src="${src}"]`);
            if (scriptTag) {
                scriptTag.remove();
            }
        }
        function commentSeriesGrid() {
            const seriesGrid = document.getElementById('seriesGrid');
            if (seriesGrid) {
                const comment = document.createComment(seriesGrid.outerHTML);
                seriesGrid.parentNode.replaceChild(comment, seriesGrid);
                carregaScript('filmes');
            }
        }
        function commentMovieGrid() {
            document.getElementById('seriesGrid').style.display = 'grid'
            const movieGrid = document.getElementById('movieGrid');
            if (movieGrid) {
                const comment = document.createComment(movieGrid.outerHTML);
                movieGrid.parentNode.replaceChild(comment, movieGrid);
            }
        }
        function uncommentSeriesGrid() {
            const comments = document.createTreeWalker(document.body, NodeFilter.SHOW_COMMENT, null, false);
            let commentNode;
            while (commentNode = comments.nextNode()) {
                if (commentNode.nodeValue.includes('id="seriesGrid"')) {
                    const tempDiv = document.createElement('div');
                    tempDiv.innerHTML = commentNode.nodeValue;
                    const seriesGrid = tempDiv.firstChild;
                    commentNode.parentNode.replaceChild(seriesGrid, commentNode);
                    break;
                }
            }

        }
        function uncommentMoviesGrid() {
            const comments = document.createTreeWalker(document.body, NodeFilter.SHOW_COMMENT, null, false);
            let commentNode;
            while (commentNode = comments.nextNode()) {
                if (commentNode.nodeValue.includes('id="movieGrid"')) {
                    const tempDiv = document.createElement('div');
                    tempDiv.innerHTML = commentNode.nodeValue;
                    const seriesGrid = tempDiv.firstChild;
                    commentNode.parentNode.replaceChild(seriesGrid, commentNode);
                    break;
                }
            }
        }
        function commentScriptTag() {
            const scriptTag = document.querySelector('script[src="myseries.js"]');
            if (scriptTag) {
                const comment = document.createComment(scriptTag.outerHTML);
                scriptTag.parentNode.replaceChild(comment, scriptTag);
            }

        }
        function commentScriptTag2() {
            const scriptTag = document.querySelector('script[src="scripttyy.js"]');
            if (scriptTag) {
                const comment = document.createComment(scriptTag.outerHTML);
                scriptTag.parentNode.replaceChild(comment, scriptTag);
            }
        }
        function reloadScript(src) {
            const oldScript = document.querySelector(`script[src="${src}"]`);
            if (oldScript) {
                oldScript.remove();
            }

            const newScript = document.createElement('script');
            newScript.src = src;
            newScript.onload = function () {
                (async () => {
                    await new Promise(getSeries());
                    document.querySelector('.loader').style.display = 'none';
                })();
                console.log(`${src} recarregado`);
            }
            document.body.appendChild(newScript);

        }
        function reloadPage() {
            location.reload();
        }
        function reloadMovie() {
            uncommentMoviesGrid()
            commentSeriesGrid();
            //commentScriptTag();
            document.getElementById('movieGrid').style.display = 'grid';
                }
        function reloadSeries() {
            uncommentSeriesGrid();
            commentMovieGrid();
            commentScriptTag2();
            document.getElementById('seriesGrid').style.display = 'grid';
            reloadScript('myseries.js');


        }
    </script>
    <script src="js/script.min.js"></script>
    <script src="script.js"></script>
</body>

</html>